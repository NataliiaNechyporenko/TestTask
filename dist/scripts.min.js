'use strict';

var commentUrl = 'http://frontend-test.pingbull.com/pages/ns.nechyporenko@gmail.com/comments';
var comments = document.querySelector('.comments');
var count = 5;
var commentsData = [];
var currentUser = {
  id: 1
};

var buttons = {
  "replyBtn": function replyBtn(event) {
    var replyBtn = parseInt(event.target.id);
    var addReplyBlock = document.getElementById(replyBtn + 'addreplyTo');
    addReplyBlock.style.display = "flex";
  },
  "cancelReplyBtn": function cancelReplyBtn(event) {
    var cancelReplyBtn = parseInt(event.target.id);
    var addReplyBlock = document.getElementById(cancelReplyBtn + 'addreplyTo');
    var cancelEditBlock = document.getElementById(cancelReplyBtn + 'editBlock');
    console.log(addReplyBlock);
    addReplyBlock.style.display = "none";
    cancelEditBlock.style.display = "none";
  },
  "addCommentBtn": function addCommentBtn(event) {
    addComment(event);
  },
  "deleteBtn": function deleteBtn(event) {
    deleteComment(event);
  },
  "editBtn": function editBtn(event) {
    var commentId = parseInt(event.target.id);
    var editCommentBlock = document.getElementById(commentId + 'editBlock');
    editCommentBlock.style.display = "flex";
    var content = document.getElementById(commentId + 'editCommentText');
    var commentToEdit = commentsData.filter(function (comment) {
      return comment.id === commentId;
    });

    content.value = commentToEdit[0].content;
  },
  "sendEditComment": function sendEditComment(event) {
    editComment(event);
  },
  "load-more": function loadMore(event) {
    count += 5;
    getComments();
  }
};

var btnHandler = function btnHandler() {
  var target = event.target;
  for (var key in buttons) {
    if (target.className.includes(key)) {
      buttons[key](event);
    }
  };
};

function isCurrentUser(comment) {
  var btnEdit = document.getElementById(comment.id + 'Edit');
  var btnDelete = document.getElementById(comment.id + 'Delete');

  if (comment.author.id !== currentUser.id) {
    btnEdit.style.display = "none";
    btnDelete.style.display = "none";
  };
};

function renderComment(comment) {
  if (comment.children) {
    var replyes = comment.children.map(function (reply) {
      reply.to = comment.author.name;
      return renderReply(reply);
    }).join('');
    comment.replyes = replyes;
  }

  var tmpl = _.template(document.getElementById('comment-template').innerHTML);
  var compiled = tmpl(comment);
  var div = document.createElement("div");

  div.setAttribute("id", "comment-" + comment.id);
  div.innerHTML = compiled;
  comments.appendChild(div);
};

function renderReply(reply) {
  var replyTmpl = _.template(document.getElementById('reply-template').innerHTML);
  var replyWrapper = document.createElement("div");

  replyWrapper.setAttribute("id", "reply-" + reply.id);
  replyWrapper.innerHTML = replyTmpl(reply);
  return replyWrapper.innerHTML;
};

var getComments = function getComments() {
  comments.innerHTML = '';
  document.querySelector('#commentText').value = '';

  fetch(commentUrl + '?count=' + count).then(function (response) {
    if (response.ok) {
      return response.json();
    }
    throw new Error('Error fetching' + response.statusText);
  }).then(function (data) {
    commentsData = data.slice();

    data.map(function (comment) {
      renderComment(comment);
      isCurrentUser(comment);
    });
  }).catch(function (err) {
    return console.log(err);
  });
};

function addComment(event) {
  var parentCommentId = parseInt(event.target.id);
  var newComment = {};
  var content = document.querySelector('#commentText').value;
  var replyContent = document.getElementById(parentCommentId + 'addReply').value;

  if (content || replyContent) {
    newComment.headers = {
      'Content-Type': 'application/json'
    };
    newComment.method = "POST";

    if (parentCommentId !== NaN) {
      newComment.body = JSON.stringify({
        "content": replyContent,
        "parent": parentCommentId
      });
    } else {
      newComment.body = JSON.stringify({
        "content": content
      });
    };

    fetch(commentUrl, newComment).then(function (response) {
      if (response.ok) {
        response.json();
      } else {
        throw new Error("Error fetching data. Response status: " + response.status + " : " + response.statusText);
      }
    }).then(getComments).catch(function (err) {
      console.error("Error: ", err);
    });
  };
};

function deleteComment(event) {
  var commentId = parseInt(event.target.id);

  fetch(commentUrl + '/' + commentId, {
    method: 'delete'
  }).then(function (response) {
    if (response.ok) {
      getComments();
    } else {
      throw new Error("Error fetching data. Response status: " + response.status + " : " + response.statusText);
    }
  }).catch(function (err) {
    console.error("Error: ", err);
  });
};

function editComment(event) {
  var editedComment = {};
  var commentId = parseInt(event.target.id);
  var content = document.getElementById(commentId + 'editCommentText').value;

  if (content) {
    editedComment.headers = {
      'Content-Type': 'application/json'
    };
    editedComment.method = "PUT";
    editedComment.body = JSON.stringify({
      "content": content
    });
  };

  fetch(commentUrl + '/' + commentId, editedComment).then(function (response) {
    if (response.ok) {
      getComments();
    } else {
      throw new Error("Error fetching data. Response status: " + response.status + " : " + response.statusText);
    }
  }).catch(function (err) {
    console.error("Error: ", err);
  });
};

window.onload = getComments();
document.addEventListener("click", btnHandler);